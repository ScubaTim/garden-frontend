{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/timgentry/Desktop/Dev/garden/garden-frontend/src/components/plantview/PlantView.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { create } from '../../services/plantsService';\nimport { Col, Button, Form, FormGroup, Label, Input, Card, CardBody } from 'reactstrap';\n\nconst PlantView = ({\n  plantsData,\n  setPlantsData,\n  toggleGardenView,\n  setToggleGardenView\n}) => {\n  _s();\n\n  const [name, setName] = useState('');\n  const [scientificName, setScientificName] = useState('');\n  const [description, setDescription] = useState(''); //const [plantingMonth, setPlantingMonth] = useState('')\n  //const [monthToHarvest, setMonthToHaverst] = useState('')\n\n  const [sunlight, setSunlight] = useState('Shade'); //const [soilType, setSoilType] = useState('')\n  //const [watering, setWatering] = useState('')\n  //const [growingZone, setGrowingZone] = useState('')\n\n  const [idealTemp, setIdealTemp] = useState(\"Not Defined\"); //const [seedDepth, setSeedDepth] = useState(0)\n  //const [spacing, setSpacing] = useState(0)\n  //const [daysToMature, setDaysToMature] = useState(0)\n  //const [sproutsIn, setSproutsIn] = useState(0)\n\n  const [imageURL, setImageURL] = useState('');\n  const [grownFromSeed, setGrownFromSeed] = useState('Yes');\n  const [heirloom, setHeirloom] = useState('Yes');\n\n  const handleAddPlant = e => {\n    e.preventDefault();\n    const newPlant = {\n      name,\n      scientificName,\n      description,\n      grownFromSeed,\n      // plantingMonth,\n      // monthToHarvest,\n      sunlight,\n      // soilType,\n      // watering,\n      imageURL,\n      heirloom,\n      //growingZone,\n      idealTemp //seedDepth,\n      //spacing,\n      //daysToMature,\n      //sproutsIn\n\n    };\n    create(newPlant).then(returnedPlant => {\n      setPlantsData(plantsData.concat(returnedPlant));\n    }).catch(err => console.log('There was an error submitting a plant', err));\n    setToggleGardenView(!toggleGardenView);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    body: true,\n    className: \"px-4 pt-5 pb-2\",\n    style: {\n      borderRadius: \"0\",\n      backgroundColor: \"#f8f8f4\"\n    },\n    children: /*#__PURE__*/_jsxDEV(CardBody, {\n      className: \"pt-0\",\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleAddPlant,\n        children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n          row: true,\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            className: \"h5\",\n            for: \"plantName\",\n            sm: 2,\n            children: \"Plant Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            sm: 10,\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              name: \"plantName\",\n              required: true,\n              onChange: e => setName(e.target.value),\n              id: \"plantName\",\n              placeholder: \"Enter plant name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          row: true,\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            className: \"h5\",\n            for: \"scientificName\",\n            sm: 2,\n            children: \"Scientific Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            sm: 10,\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              name: \"scientificName\",\n              required: true,\n              onChange: e => setScientificName(e.target.value),\n              id: \"scientificName\",\n              placeholder: \"Enter scientific name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          row: true,\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            className: \"h5\",\n            for: \"description\",\n            sm: 2,\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            sm: 10,\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              type: \"textarea\",\n              name: \"description\",\n              required: true,\n              onChange: e => setDescription(e.target.value),\n              id: \"description\",\n              placeholder: \"Write a brief description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          row: true,\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            className: \"h5\",\n            for: \"image\",\n            sm: 2,\n            children: \"Image URL\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            sm: 10,\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              name: \"imageURL\",\n              required: true,\n              onChange: e => setImageURL(e.target.value),\n              id: \"imageURL\",\n              placeholder: \"Enter a URL\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-muted mt-2 font-italic\",\n              children: [\"Enter a complete URL linking to your plant's image. We suggest using \", /*#__PURE__*/_jsxDEV(\"a\", {\n                className: \"text-muted font-weight-bold\",\n                href: \"https://www.google.com/photos/about/\",\n                children: \"Google Photos\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 141\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          row: true,\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            for: \"sunlight\",\n            sm: 2,\n            children: \"Optimal Sunlight\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            sm: 10,\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              type: \"select\",\n              required: true,\n              name: \"sunlight\",\n              onChange: e => setSunlight(e.target.value),\n              id: \"sunlight\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"Shade\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"Moderate\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"Full Sun\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          row: true,\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            for: \"seed\",\n            sm: 2,\n            children: \"Grown from seed?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            sm: 10,\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              type: \"select\",\n              name: \"seed\",\n              required: true,\n              onChange: e => setGrownFromSeed(e.target.value),\n              id: \"seed\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"Yes\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"No\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          row: true,\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            className: \"h5\",\n            for: \"scientificName\",\n            sm: 2,\n            children: \"Ideal Temperature\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            sm: 10,\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              name: \"scientificName\",\n              required: true,\n              onChange: e => setIdealTemp(e.target.value),\n              id: \"scientificName\",\n              placeholder: \"Enter scientific name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          row: true,\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            for: \"seed\",\n            sm: 2,\n            children: \"Heirloom?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            sm: 10,\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              type: \"select\",\n              name: \"seed\",\n              required: true,\n              onChange: e => setHeirloom(e.target.value),\n              id: \"seed\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"Yes\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"No\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: \"mt-5\",\n          block: true,\n          size: \"lg\",\n          color: \"success\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PlantView, \"/AROLKTICVU5t2Sp55bkZiyHLWs=\");\n\n_c = PlantView;\nexport default PlantView;\n\nvar _c;\n\n$RefreshReg$(_c, \"PlantView\");","map":{"version":3,"sources":["/Users/timgentry/Desktop/Dev/garden/garden-frontend/src/components/plantview/PlantView.js"],"names":["React","useState","create","Col","Button","Form","FormGroup","Label","Input","Card","CardBody","PlantView","plantsData","setPlantsData","toggleGardenView","setToggleGardenView","name","setName","scientificName","setScientificName","description","setDescription","sunlight","setSunlight","idealTemp","setIdealTemp","imageURL","setImageURL","grownFromSeed","setGrownFromSeed","heirloom","setHeirloom","handleAddPlant","e","preventDefault","newPlant","then","returnedPlant","concat","catch","err","console","log","borderRadius","backgroundColor","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { create } from '../../services/plantsService'\nimport { Col, Button, Form, FormGroup, Label, Input, Card, CardBody } from 'reactstrap';\n\n\nconst PlantView = ({ plantsData, setPlantsData, toggleGardenView, setToggleGardenView }) => {\n    const [name, setName] = useState('')\n    const [scientificName, setScientificName] = useState('')\n    const [description, setDescription] = useState('')\n    //const [plantingMonth, setPlantingMonth] = useState('')\n    //const [monthToHarvest, setMonthToHaverst] = useState('')\n    const [sunlight, setSunlight] = useState('Shade')\n    //const [soilType, setSoilType] = useState('')\n    //const [watering, setWatering] = useState('')\n\n    //const [growingZone, setGrowingZone] = useState('')\n    const [idealTemp, setIdealTemp] = useState(\"Not Defined\")\n    //const [seedDepth, setSeedDepth] = useState(0)\n    //const [spacing, setSpacing] = useState(0)\n    //const [daysToMature, setDaysToMature] = useState(0)\n    //const [sproutsIn, setSproutsIn] = useState(0)\n    const [imageURL, setImageURL] = useState('')\n    const [grownFromSeed, setGrownFromSeed] = useState('Yes')\n    const [heirloom, setHeirloom] = useState('Yes')\n\n    const handleAddPlant = (e) => {\n        e.preventDefault()\n\n        const newPlant = {\n            name,\n            scientificName,\n            description,\n            grownFromSeed,\n            // plantingMonth,\n            // monthToHarvest,\n            sunlight,\n            // soilType,\n            // watering,\n            imageURL,\n            heirloom,\n            //growingZone,\n            idealTemp,\n            //seedDepth,\n            //spacing,\n            //daysToMature,\n            //sproutsIn\n        }\n\n        create(newPlant)\n            .then((returnedPlant) => {\n                setPlantsData(plantsData.concat(returnedPlant))\n            })\n            .catch(err => console.log('There was an error submitting a plant', err))\n\n        setToggleGardenView(!toggleGardenView)\n    }\n\n    return (\n        <Card body className=\"px-4 pt-5 pb-2\" style={{ borderRadius: \"0\", backgroundColor: \"#f8f8f4\" }}>\n            <CardBody className=\"pt-0\">\n                <Form onSubmit={handleAddPlant}>\n                    <FormGroup row>\n                        <Label className=\"h5\" for=\"plantName\" sm={2}>Plant Name</Label>\n                        <Col sm={10}>\n                            <Input type=\"text\" name=\"plantName\" required onChange={(e) => setName(e.target.value)} id=\"plantName\" placeholder=\"Enter plant name\" />\n                        </Col>\n                    </FormGroup>\n                    <FormGroup row>\n                        <Label className=\"h5\" for=\"scientificName\" sm={2}>Scientific Name</Label>\n                        <Col sm={10}>\n                            <Input type=\"text\" name=\"scientificName\" required onChange={(e) => setScientificName(e.target.value)} id=\"scientificName\" placeholder=\"Enter scientific name\" />\n                        </Col>\n                    </FormGroup>\n                    <FormGroup row>\n                        <Label className=\"h5\" for=\"description\" sm={2}>Description</Label>\n                        <Col sm={10}>\n                            <Input type=\"textarea\" name=\"description\" required onChange={(e) => setDescription(e.target.value)} id=\"description\" placeholder=\"Write a brief description\" />\n                        </Col>\n                    </FormGroup>\n                    <FormGroup row>\n                        <Label className=\"h5\" for=\"image\" sm={2}>Image URL</Label>\n                        <Col sm={10}>\n                            <Input type=\"text\" name=\"imageURL\" required onChange={(e) => setImageURL(e.target.value)} id=\"imageURL\" placeholder=\"Enter a URL\" />\n                            <p className=\"text-muted mt-2 font-italic\">Enter a complete URL linking to your plant's image. We suggest using <a className=\"text-muted font-weight-bold\" href=\"https://www.google.com/photos/about/\">Google Photos</a></p>\n                        </Col>\n                    </FormGroup>\n                    {/* <FormGroup row>\n                        <Label for=\"soil\" sm={2}>Optimal Soil</Label>\n                        <Col sm={10}>\n                            <Input required onChange={(e) => setSoilType(e.target.value)} type=\"select\" name=\"soil\" id=\"soil\">\n                                <option>Clay</option>\n                                <option>Sandy</option>\n                                <option>Silty</option>\n                                <option>Peaty</option>\n                                <option>Chalky</option>\n                                <option>Loamy</option>\n                            </Input>\n                        </Col>\n                    </FormGroup> */}\n                    {/* <FormGroup row>\n                        <Label for=\"watering\" sm={2}>Optimal Watering</Label>\n                        <Col sm={10}>\n                            <Input type=\"text\" name=\"watering\" onChange={(e) => setWatering(e.target.value)} id=\"watering\" />\n                        </Col>\n                    </FormGroup> */}\n                    {/* <FormGroup row>\n                        <Label for=\"plantingMonth\" sm={2}>Month to Plant</Label>\n                        <Col sm={10}>\n                            <Input type=\"date\" name=\"plantingMonth\" required onChange={(e) => setPlantingMonth(e.target.value)} id=\"plantingMonth\" />\n                        </Col>\n                    </FormGroup>\n                    <FormGroup row>\n                        <Label for=\"harvest\" sm={2}>Month to Harvest</Label>\n                        <Col sm={10}>\n                            <Input type=\"date\" name=\"harvest\" onChange={(e) => setMonthToHaverst(e.target.value)} id=\"harvest\" />\n                        </Col>\n                    </FormGroup> */}\n                    <FormGroup row>\n                        <Label for=\"sunlight\" sm={2}>Optimal Sunlight</Label>\n                        <Col sm={10}>\n                            <Input type=\"select\" required name=\"sunlight\" onChange={(e) => setSunlight(e.target.value)} id=\"sunlight\">\n                                <option>Shade</option>\n                                <option>Moderate</option>\n                                <option>Full Sun</option>\n                            </Input>\n                        </Col>\n                    </FormGroup>\n                    <FormGroup row>\n                        <Label for=\"seed\" sm={2}>Grown from seed?</Label>\n                        <Col sm={10}>\n                            <Input type=\"select\" name=\"seed\" required onChange={e => setGrownFromSeed(e.target.value)} id=\"seed\">\n                                <option>Yes</option>\n                                <option>No</option>\n                            </Input>\n                        </Col>\n                    </FormGroup>\n                    <FormGroup row>\n                        <Label className=\"h5\" for=\"scientificName\" sm={2}>Ideal Temperature</Label>\n                        <Col sm={10}>\n                            <Input type=\"text\" name=\"scientificName\" required onChange={(e) => setIdealTemp(e.target.value)} id=\"scientificName\" placeholder=\"Enter scientific name\" />\n                        </Col>\n                    </FormGroup>\n                    <FormGroup row>\n                        <Label for=\"seed\" sm={2}>Heirloom?</Label>\n                        <Col sm={10}>\n                            <Input type=\"select\" name=\"seed\" required onChange={e => setHeirloom(e.target.value)} id=\"seed\">\n                                <option>Yes</option>\n                                <option>No</option>\n                            </Input>\n                        </Col>\n                    </FormGroup>\n\n                    <Button type=\"submit\" className=\"mt-5\" block size=\"lg\" color=\"success\">Submit</Button>\n                </Form>\n            </CardBody>\n        </Card>\n    )\n}\n\nexport default PlantView"]},"metadata":{},"sourceType":"module"}